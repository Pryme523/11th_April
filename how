[33mcommit 8df8d8452d7637f369ced2ee952ad8b356c72690[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Pryme523 <boakyeemmanuel523@gmail.com>
Date:   Thu Aug 1 10:34:34 2024 -0700

    Update if else while variables task

[1mdiff --git a/C-programming/if_else_while/0-positive_or_negative.c b/C-programming/if_else_while/0-positive_or_negative.c[m
[1mnew file mode 100644[m
[1mindex 0000000..ad7f660[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/0-positive_or_negative.c[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include <time.h>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m* main - asigns a random number to a variable n[m
[32m+[m[32m*[m
[32m+[m[32m*Return 0 Always[m
[32m+[m[32m*/[m
[32m+[m
[32m+[m[32mint main(void)[m
[32m+[m[32m{[m
[32m+[m	[32mint n;[m
[32m+[m
[32m+[m	[32msrand(time(0));[m
[32m+[m	[32mn = rand() - RAND_MAX / 2;[m
[32m+[m[41m	[m
[32m+[m	[32mif(n > 0)[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("%d is positive\n", n);[m
[32m+[m	[32m}[m[41m	[m
[32m+[m
[32m+[m	[32melse if(n == 0)[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("%d is zero\n", n);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32melse[m
[32m+[m		[32mprintf("%d is negative\n", n);[m
[32m+[m[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/0-positive_or_negative.exe b/C-programming/if_else_while/0-positive_or_negative.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..e1d049d[m
Binary files /dev/null and b/C-programming/if_else_while/0-positive_or_negative.exe differ
[1mdiff --git a/C-programming/if_else_while/1-last_digit.c b/C-programming/if_else_while/1-last_digit.c[m
[1mnew file mode 100644[m
[1mindex 0000000..e1be8de[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/1-last_digit.c[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m#include <time.h>[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m/**[m
[32m+[m[32m*main - prints the last digit[m[41m [m
[32m+[m[32m* of a number[m
[32m+[m[32m* Return 0 Always[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main(void)[m
[32m+[m[32m{[m
[32m+[m	[32mint n, last;[m
[32m+[m
[32m+[m	[32msrand(time(0));[m
[32m+[m	[32mn = rand() - RAND_MAX / 2;[m
[32m+[m[41m	[m
[32m+[m	[32mlast = n % 10;[m
[32m+[m	[32mif(last > 5)[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("Last digit of %d is %d and is greater than 5\n", n,last);[m
[32m+[m	[32m}[m
[32m+[m	[32melse if(last == 0)[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("Last digit of %d is %d and is 0\n", n,last);[m
[32m+[m	[32m}[m
[32m+[m	[32mif(last < 6 && last != 0)[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("Last digit of %d is %d and is less than 6 and not 0\n", n,last);[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[41m	[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/1-last_digit.exe b/C-programming/if_else_while/1-last_digit.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..7fc8e48[m
Binary files /dev/null and b/C-programming/if_else_while/1-last_digit.exe differ
[1mdiff --git a/C-programming/if_else_while/2-print_alphabet.c b/C-programming/if_else_while/2-print_alphabet.c[m
[1mnew file mode 100644[m
[1mindex 0000000..2e92780[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/2-print_alphabet.c[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m#include <stdlib.h>[m
[32m+[m[32m/**[m
[32m+[m[32m * main - prints the alphabet in lower case[m
[32m+[m[32m *[m
[32m+[m[32m * Return 0 Always[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main (void)[m
[32m+[m[32m{[m
[32m+[m	[32mchar a = 'a';[m
[32m+[m		[32mwhile(a <= 'z')[m
[32m+[m		[32m{[m
[32m+[m			[32mputchar(a);[m
[32m+[m			[32ma++;[m
[32m+[m		[32m}[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/2-print_alphabet.exe b/C-programming/if_else_while/2-print_alphabet.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..c8d43fc[m
Binary files /dev/null and b/C-programming/if_else_while/2-print_alphabet.exe differ
[1mdiff --git a/C-programming/if_else_while/3-print_alphabets.c b/C-programming/if_else_while/3-print_alphabets.c[m
[1mnew file mode 100644[m
[1mindex 0000000..b1e9377[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/3-print_alphabets.c[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m[32m/**[m
[32m+[m[32m * main - prints the alphabet in lowercase[m
[32m+[m[32m * and then in uppercase[m
[32m+[m[32m * followed by a newline[m
[32m+[m[32m *[m
[32m+[m[32m * Return 0 Always[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main (void)[m
[32m+[m[32m{[m
[32m+[m	[32mchar a = 'a', A = 'A';[m
[32m+[m
[32m+[m	[32mwhile(a <= 'z')[m
[32m+[m	[32m{[m
[32m+[m		[32mputchar(a);[m
[32m+[m		[32ma++;[m
[32m+[m	[32m}[m
[32m+[m	[32mwhile(A <= 'Z')[m
[32m+[m	[32m{[m
[32m+[m		[32mputchar(A);[m
[32m+[m		[32mA++;[m
[32m+[m	[32m}[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/3-print_alphabets.exe b/C-programming/if_else_while/3-print_alphabets.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..9c175d6[m
Binary files /dev/null and b/C-programming/if_else_while/3-print_alphabets.exe differ
[1mdiff --git a/C-programming/if_else_while/4-print_alphabt.c b/C-programming/if_else_while/4-print_alphabt.c[m
[1mnew file mode 100644[m
[1mindex 0000000..9eba0fe[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/4-print_alphabt.c[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * main - prints the alphabet in lowercase[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main (void)[m
[32m+[m[32m{[m
[32m+[m	[32mchar a = 'a';[m
[32m+[m
[32m+[m		[32mwhile (a <= 'z')[m
[32m+[m		[32m{[m
[32m+[m			[32mif(a != 'e' && a != 'q')[m
[32m+[m			[32mputchar(a);[m
[32m+[m			[32ma++;[m
[32m+[m		[32m}[m
[32m+[m		[32mputchar('\n');[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/4-print_alphabt.exe b/C-programming/if_else_while/4-print_alphabt.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..d1bb96a[m
Binary files /dev/null and b/C-programming/if_else_while/4-print_alphabt.exe differ
[1mdiff --git a/C-programming/if_else_while/5-print_numbers.c b/C-programming/if_else_while/5-print_numbers.c[m
[1mnew file mode 100644[m
[1mindex 0000000..3ac94cf[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/5-print_numbers.c[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * main - prints all single digit numbers of[m[41m [m
[32m+[m[32m * base 10 starting from 0[m
[32m+[m[32m *[m
[32m+[m[32m * Return 0 Always[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main (void)[m
[32m+[m[32m{[m
[32m+[m	[32munsigned int a = 0;[m
[32m+[m
[32m+[m	[32mwhile (a < 10)[m
[32m+[m	[32m{[m
[32m+[m		[32mprintf("%u", a);[m
[32m+[m		[32ma++;[m
[32m+[m	[32m}[m
[32m+[m	[32mprintf("\n");[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/5-print_numbers.exe b/C-programming/if_else_while/5-print_numbers.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..b30743c[m
Binary files /dev/null and b/C-programming/if_else_while/5-print_numbers.exe differ
[1mdiff --git a/C-programming/if_else_while/6-print_numberz.c b/C-programming/if_else_while/6-print_numberz.c[m
[1mnew file mode 100644[m
[1mindex 0000000..5abb740[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/6-print_numberz.c[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * main - prints all single digit numbers of[m[41m [m
[32m+[m[32m * base 10 starting from 0[m
[32m+[m[32m *[m
[32m+[m[32m * Return 0 Always[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main (void)[m
[32m+[m[32m{[m
[32m+[m	[32munsigned int a = 0;[m
[32m+[m
[32m+[m	[32mwhile (a < 10)[m
[32m+[m	[32m{[m
[32m+[m		[32mputchar(a + '0');[m
[32m+[m		[32ma++;[m
[32m+[m	[32m}[m
[32m+[m	[32mputchar('\n');[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/6-print_numberz.exe b/C-programming/if_else_while/6-print_numberz.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..a80faeb[m
Binary files /dev/null and b/C-programming/if_else_while/6-print_numberz.exe differ
[1mdiff --git a/C-programming/if_else_while/7-print_tebahpla.c b/C-programming/if_else_while/7-print_tebahpla.c[m
[1mnew file mode 100644[m
[1mindex 0000000..985db02[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/7-print_tebahpla.c[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * main - prints the lowercase alphabet in reverse[m
[32m+[m[32m *[m
[32m+[m[32m * Return 0 Always[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main (void)[m
[32m+[m[32m{[m
[32m+[m	[32mchar z = 'z';[m
[32m+[m		[32mwhile(z >= 'a')[m
[32m+[m		[32m{[m
[32m+[m			[32mputchar(z);[m
[32m+[m			[32mz--;[m
[32m+[m		[32m}[m
[32m+[m	[32mputchar('\n');[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/7-print_tebahpla.exe b/C-programming/if_else_while/7-print_tebahpla.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..38269c2[m
Binary files /dev/null and b/C-programming/if_else_while/7-print_tebahpla.exe differ
[1mdiff --git a/C-programming/if_else_while/9-print_comb.c b/C-programming/if_else_while/9-print_comb.c[m
[1mnew file mode 100644[m
[1mindex 0000000..9bd08e6[m
[1m--- /dev/null[m
[1m+++ b/C-programming/if_else_while/9-print_comb.c[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * main - prints all single digit numbers of[m[41m [m
[32m+[m[32m * base 10 starting from 0[m
[32m+[m[32m *[m
[32m+[m[32m * Return 0 Always[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mint main (void)[m
[32m+[m[32m{[m
[32m+[m	[32munsigned int a = 0;[m
[32m+[m
[32m+[m	[32mwhile (a < 10)[m
[32m+[m	[32m{[m
[32m+[m		[32mputchar(a + '0');[m
[32m+[m		[32ma++;[m
[32m+[m		[32mif (a < 10)[m
[32m+[m		[32m{[m
[32m+[m			[32mputchar(',');[m
[32m+[m			[32mputchar(' ');[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m	[32m}[m
[32m+[m	[32mputchar('\n');[m
[32m+[m	[32mreturn (0);[m
[32m+[m[32m}[m
[1mdiff --git a/C-programming/if_else_while/9-print_comb.exe b/C-programming/if_else_while/9-print_comb.exe[m
[1mnew file mode 100644[m
[1mindex 0000000..7073784[m
Binary files /dev/null and b/C-programming/if_else_while/9-print_comb.exe differ
